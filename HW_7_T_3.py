########################################################################################################################
# 3. Реализовать программу работы с органическими клетками. Необходимо создать класс Клетка. В его конструкторе
# инициализировать параметр, соответствующий количеству клеток (целое число). В классе должны быть реализованы методы
# перегрузки арифметических операторов: сложение (__add__()), вычитание (__sub__()), умножение (__mul__()),
# деление (__truediv__()).Данные методы должны применяться только к клеткам и выполнять увеличение, уменьшение,
# умножение и обычное (не целочисленное) деление клеток, соответственно. В методе деления должно осуществляться
# округление значения до целого числа.
########################################################################################################################

class Cell:

    def __init__(self, name, count):
        self.name = name
        self.count = int(count)

    def __add__(self, other):
        return f'Клетки {self.name} и {other.name} объединились. Размер новой клетки равен {self.count + other.count}'

    def __sub__(self, other):
        return f'Клетка стала меньше, теперь она равна {self.count - other.count} клеткам'\
            if (self.count - other.count) > 0 else 'Клетка исчезла'

    def __mul__(self, other):
        return f'Клетки {self.name} и {other.name} перемножились. Размер новой клетки равен {self.count * other.count}'


    def __truediv__(self, other):
        return f'Деление: размер новой клетки - {self.count // other.count}'

    def make_order(self, num):
        print('_'*100)
        row = ''
        for i in range(int(self.count / num)):
            row += '*' * num + '\n'
        row += '*' * (self.count % num) + '\n'
        print(f'Схема:\n{row}')
        return row

bel = Cell('Белок', 12)
fat = Cell('Жир', 5)

print(bel + fat)
print(bel - fat)
print(bel * fat)
print(bel / fat)
bel.make_order(5)