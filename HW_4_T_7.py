########################################################################################################################
# 7. Реализовать генератор с помощью функции с ключевым словом yield, создающим очередное значение.
# При вызове функции должен создаваться объект-генератор. Функция должна вызываться следующим образом: for el in fact(n).
# Функция отвечает за получение факториала числа, а в цикле необходимо выводить только первые n чисел, начиная с 1! и до n!.
# Подсказка: факториал числа n — произведение чисел от 1 до n. Например, факториал четырёх 4! = 1 * 2 * 3 * 4 = 24.
########################################################################################################################

def fact(n):
    f = 1
    nums = []
    if n == 0 or n == 1: # Небольшая проблема с 0 и 1 :(
        yield f'{n}! = 1'
    for el in range(1, n):
        f *= el
        nums.append(el)
        yield f'{el}!'
    nums.append(el + 1)
    my_str = ' * '.join(map(str, nums))
    yield f'{el + 1}! = {my_str} = {f * (el + 1)}'

for el in fact(int(input('Введите число, для вычисления его факториала - '))):
    print(el)